package postgresqldriver

import (
	"database/sql"
	"fmt"
	"log"
	"os"
	"time"

	_ "github.com/lib/pq"
	"github.com/singh123ankit/Stocks/models"
)

const (
	DBDRIVER = "postgres"
)

var dbH *sql.DB

func InitDB() *sql.DB {
	var err error

	connStr, ok := os.LookupEnv("DATABASE_URL")
	if !ok {
		log.Println("Environment variable DATABASE_URL is not set.")
	}
	for i := 1; i <= 10; i++ {
		dbH, err = sql.Open(DBDRIVER, connStr)
		if err != nil {
			log.Printf("Error: %v | Retrying to connect to the database after 10s......", err)
			time.Sleep(10 * time.Second)
			continue
		}
		break
	}
	log.Printf("Database connection handler dbH: %v\n", dbH)
	return dbH
}

func InsertStock(stock models.Stock) (int64, error) {
	stmt := `INSERT INTO stocks(name,price,company) VALUES($1, $2, $3) RETURNING stockid`
	var id int64
	err := dbH.QueryRow(stmt, stock.Name, stock.Price, stock.Company).Scan(&id)
	if err != nil {
		log.Fatalf("Failed to insert Stock record into the database: %v", err)
		return id, err
	}
	fmt.Printf("Inserted record successfully %v", id)
	return id, nil
}

func GetStockById(id int64) (models.Stock, error) {

}
